[project]
  authors = [
    { name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca" },
    { name = "Nicolas Tessore", email = "n.tessore@ucl.ac.uk" },
  ]
  classifiers = [
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
  ]
  dependencies = [
    "cosmology.api",
    "camb",
    "numpy>=1.20",
    "typing_extensions>=3.7.4.2",
  ]
  description = "Cosmology API standard compatability library for CAMB"
  keywords = ["cosmology", "API"]
  license = { file = "LICENSE" }
  maintainers = [
    { name = "Nathaniel Starkman", email = "n.starkman@mail.utoronto.ca" },
    { name = "Nicolas Tessore", email = "n.tessore@ucl.ac.uk" },
  ]
  name = "cosmology.compat.camb"
  readme = "README.rst"
  requires-python = ">=3.9"
  version = "0.1.0"

  [project.optional-dependencies]
    all = []
    docs = [
      "graphviz",
      "IPython",
      "jupyter_client",
      "nbsphinx",
      "pydata-sphinx-theme",
      "sphinx",
      "sphinx-astropy",
      "sphinxcontrib.bibtex < 3.0.0",
      "tomlkit",
    ]
    test = ["coverage[toml]", "numpy>=1.19", "pytest", "pytest-astropy"]

  [project.urls]
    documentation = "https://cosmology.readthedocs.org/camb"
    homepage = "https://cosmology.readthedocs.org/camb"
    repository = "https://github.com/cosmology-api/cosmology-compat-camb"


[build-system]
  requires = [
    "mypy>=0.991",
    "setuptools>=45.0",
    "setuptools_scm[toml]>=6.3.1",
    "wheel",
  ]

  build-backend = 'setuptools.build_meta'


[tool.setuptools]
  package-dir = { "" = "src" }

  [tool.setuptools.packages.find]
    where = ["src"]

[tool.setuptools_scm]


[tool.coverage.run]
  omit = ["tests/*"]

[tool.coverage.report]
  exclude_lines = [
    # Have to re-enable the standard pragma
    # and branches that don't pertain to this version of Python
    "pragma: no cover",
    "pragma: py{ignore_python_version}",
    # Don't complain if tests don't hit defensive assertion code:
    "raise AssertionError",
    "raise NotImplementedError",
    # Don't complain if non-runnable code isn't run
    "if __name__ == .__main__.:",
    # Don't complain about abstract methods, they aren't run:
    '@(abc\.)?abstractmethod',
    # Exclude type check blocks and Protocol contents, they aren't run:
    "if TYPE_CHECKING:",
    '\.\.\.',
    # Don't complain about IPython completion helper
    "def _ipython_key_completions_",
  ]


[tool.mypy]
  python_version = 3.9

  explicit_package_bases = true
  mypy_path = "$MYPY_CONFIG_FILE_DIR/src"
  namespace_packages = true

  disallow_subclassing_any = false
  disallow_untyped_defs = true
  exclude = '''(^|/)tests/|(^/)docs/|(^/)conftest\.py'''
  no_implicit_optional = true
  strict = true
  warn_redundant_casts = true
  warn_return_any = true
  warn_unreachable = true
  warn_unused_configs = true

  [[tool.mypy.overrides]]
    ignore_errors = true
    module = "tests/*"

  [[tool.mypy.overrides]]
    ignore_errors = true
    module = "docs/*"

  [[tool.mypy.overrides]]
    ignore_missing_imports = true
    module = ["camb.*", "cosmology.api.*", "hypothesis", "numpy.*"]


[tool.ruff]
  line-length = 88
  target-version = "py39"

  ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "ARG001",
    "ARG002",
    "COM812",
    "D105",
    "D107",
    "D203",
    "D213",
    "D401",
    "FBT003",
    "FIX002",  # Line contains TODO, consider resolving the issue
    "N802",
    "PD",
    "RET505",
    "RET506",
    "RET507",
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link on the line following this TODO
  ]
  select = ["ALL"]

  [tool.ruff.per-file-ignores]
    "docs/*.py" = ["INP001"]
    "test_*.py" = ["ANN", "D", "N8", "S101", "SLF001"]

  [tool.ruff.isort]
    known-first-party = ["cosmology.api"]
    known-local-folder = ["cosmology.compat.camb"]
    known-third-party = ["camb", "numpy"]
